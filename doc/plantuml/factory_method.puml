@startuml

interface Logger {
{abstract} log(message : String) : void
}

class FileLogger {
log(message : String) : void
}

class DbLogger {
log(message : String) : void
}

class SilentLogger {
log(message : String) : void
}

class LoggerFactory {
getLogger() : Logger
}

Logger <|-- FileLogger : <<implem.>>
Logger <|-- DbLogger : <<implem.>>
Logger <|-- SilentLogger : <<implem.>>

LoggerFactory .up.> SilentLogger: <<creates>>
LoggerFactory .up.> DbLogger: <<creates>>
LoggerFactory .up.> FileLogger: <<creates>>

@enduml
